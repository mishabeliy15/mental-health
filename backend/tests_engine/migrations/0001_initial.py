# Generated by Django 3.1.3 on 2021-03-14 21:44

import commons.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions
import tests_engine.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name_en', models.CharField(max_length=32, verbose_name='English Name')),
                ('name_ukr', models.CharField(max_length=32, verbose_name='Ukrainian Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PSTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('language', commons.fields.LanguageField(choices=[('EN', 'English'), ('UKR', 'Ukrainian')], max_length=3, verbose_name='Language')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('normal_mse', models.FloatField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Normal Mean Square Error')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_engine.category', verbose_name='Category')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PSTestStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('help_text', models.CharField(blank=True, default='', max_length=512, verbose_name='Help text')),
                ('media_type', models.PositiveSmallIntegerField(choices=[(1, 'Image'), (2, 'Audio'), (3, 'Video')], verbose_name='Media type')),
                ('duration', models.PositiveIntegerField(verbose_name='Duration (s.)')),
                ('min_pulse', commons.fields.PulseField(validators=[django.core.validators.MinValueValidator(60), django.core.validators.MaxValueValidator(300)], verbose_name='Min normal pulse')),
                ('max_pulse', commons.fields.PulseField(validators=[django.core.validators.MinValueValidator(60), django.core.validators.MaxValueValidator(300)], verbose_name='Max normal pulse')),
                ('media_file', models.FileField(upload_to=tests_engine.models.ps_test_media_directory_path, verbose_name='Media file')),
                ('ps_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_engine.pstest', verbose_name='Test')),
            ],
        ),
        migrations.AddConstraint(
            model_name='psteststep',
            constraint=models.CheckConstraint(check=models.Q(min_pulse__lte=django.db.models.expressions.F('max_pulse')), name='Min pulse must be <= max price.'),
        ),
    ]
